{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUserName": {
      "type": "string",
      "defaultValue": "berlin",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "customData": {
      "type": "string",
      "defaultValue": "echo customData",
      "metadata": {
        "description": "String passed down to the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D32_v3",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "canonical",
      "metadata": {
        "description": "Name of the image publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "ubuntuserver",
      "metadata": {
        "description": "Name of the image offer"
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "16.04.0-LTS",
      "metadata": {
        "description": "Name of the image sku"
      }
    },
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Name of the image sku"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "azsample-subnet",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "azsampleVNET",
      "metadata": {
        "description": "Name of the virtual network"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'berlin')]",
    "location": "[resourceGroup().location]",
    "osDiskName": "osDisk1",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "vmStorageAccountContainerName": "berlin-workshop-vhds",
    "publicIPAddressType": "Dynamic",
    "storageAccountType": "Standard_LRS",
    "networkSecurityGroupName": "berlinNSG",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "{{ location }}",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "{{ location }}",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
              "description": "open port 22 for ssh",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 123,
              "direction": "Inbound"
            }
          },
          {
            "name": "http_rule",
            "properties": {
              "description": "open port 80 for http",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 124,
              "direction": "Inbound"
            }
          },
          {
            "name": "https_rule",
            "properties": {
              "description": "open port 443 for https",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 125,
              "direction": "Inbound"
            }
          },
          {
            "name": "horizon_nodeport_rule",
            "properties": {
              "description": "open port 31000 for horizon nodeport",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "31000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 126,
              "direction": "Inbound"
            }
          }          
        ]
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "{{ location }}",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },


    {% for node in range(node_count) %}

    {% set node_name = "node-" ~ node %}

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "{{ node_name }}-PublicIP",
      "location": "{{ location }}",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsLabelPrefix'), '-', '{{node}}')]"
        }
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "{{ node_name}}-NIC",
      "location": "{{ location }}",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', '{{ node_name }}-PublicIP')]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', '{{ node_name}}-PublicIP')]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "{{ node_name }}",
      "location": "{{ location }}",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', '{{ node_name}}-NIC')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "customData": "{{ cloudinit }}",
          "computerName": "{{ node_name }}",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "{{ password }}",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "{{ node_name}}-osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', '{{ node_name}}-osdisk','.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', '{{ node_name }}-NIC')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }{% if not loop.last %},{% endif %}
  {% endfor %}
  ]
}
